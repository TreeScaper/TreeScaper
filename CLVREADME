
//##########################################################################
//# This software is part of the Treescaper i
//# -- Version 0.1
//# Copyright (C) 2010 Wen Huang
//#
//# This program is free software; you can redistribute it and/or
//# modify it under the terms of the GNU General Public License
//# as published by the Free Software Foundation; either version 2
//# of the License, or (at your option) any later version.
//#
//# This program is distributed in the hope that it will be useful,
//# but WITHOUT ANY WARRANTY; without even the implied warranty of
//# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//# GNU General Public License for more details.
//# http://www.gnu.org/copyleft/gpl.html
//##########################################################################

This file indicates the methods of using command line version.

Suppose the binary file obtained is called "CLVTreeScaper".
There are three options for CLVTreeScaper.

1, -trees
    Under this option, user can compute majority/strict consensus tree, distance matrices,
    bipartition matrix, covariance matrix, affinity matrix of a distance matrix, communities
    of an affinity matrix or covariance matrix.
    
    -f: indicate the file name that contain the data
    -ft: the file type
        'Trees': the file contains trees. The tree format can be either Newick or Nexus.
        'Dist': the file contains distance matrix which can be used to compute affinity matrix or communities.
        'Cova': the file contains covariance matrix which can be used to compute communities.
    -w: indicate whether trees are weighted
        '1': weighted
        '0': unweighted
    -r: indicate whether trees are rooted
        '1': rooted
        '0': unrooted

    -o: this option is used to indicate what user eventually need. Available options have
            'BipartMatrix', 'Consensus', 'Dist', 'Affinity', 'Convariance', 'Community'
        'BipartMatrix' : output bipartition matrix. -bfm is option for it.
            -bfm is used to indicate the output format
                'list'  : output sparse matrix in (row, column, value)
                'matrix': output as if it is a full matrix
        'Consensus' : output majority or strict consensus tree. -if, -cfm are options for it.
            -if: is used to indicate the name of a list file. Consensus tree only consider the trees 
                    indicated in the file.
            -ct: shows what type of consensus tree is computed
                'Majority'  : Majority consensus tree
                'Strict'    : Strict consensus tree
            -cfm: is used to indicate the format of consensus tree
                'Newick': Newick format
                'Nexus' : Nexus format
        'Dist' : compute distance matrix
            -dm: indicates metric
                'URF': Unweighted Robinson Foulds distance
                'RF': Weighted Robinson Foulds distance
                'Mat': Matching distance
                'SPR': SPR distance
        'Affinity' : compute affinity matrix based on some distance matrix
            -dm: indicates metric
                'URF': Unweighted Robinson Foulds distance
                'RF': Weighted Robinson Foulds distance
                'Mat': Matching distance
            -am: indicates function to get affinity matrix
                'Rec': Reciprocal
                'Exp': Exponential
        'Covariance': compute covariance matrix of bipartitions
        'Community'
            -t: target matrix which is used to compute community
                'Affinity': affinity matrix
                'Covariance': covariance matrix
            -cm: model that is used to compute community
                'CNM': Configuration Null Model
                'CPM': Constant Potts Model
                'ERNM': Erdos-Renyi Null Model
                'NNM': No Null Model;
            -lm: 'auto': automatically choose lambdas and find plateaus
                 'manu': specify intervals by users to find plateaus
                            -lp, -lps, -lpe, -lpiv, -ln, -lns, -lne, -lniv are used to specified the values of lambdas.
                        -lp: lambda + , it is used when -lpiv is zero.
                            a number between 0 and 1
                        -lps -lpe -lpiv: indicate the interval for lambda +, it is used when -lpiv is not zero.
                            [-lps:-lpiv:-lpe]
                        -ln: lambda -, it is used when -lniv is zero.
                            a number between 0 and 1
                        -lns -lne -lniv: indicate the interval for lambda -, it is used when -lniv is not zero.
                            [-lns:-lniv:-lne]
            -hf: frequency upper bound
                a number between 0 and 1
            -lf: frequency lower bound
                a number between 0 and 1
            
    Examples of run the command line version, A/B/C means either A or B or C can be used.
    
        Compute Bipartition matrix:
            ./CLVTreeScaper -trees -f Trees.txt -ft Trees -w 1/0 -r 1/0 -o BipartMatrix -bfm list/matrix
        
        Compute Consensus tree:
            ./CLVTreeScaper -trees -f Trees.txt -ft Trees -w 1/0 -r 1/0 -o Consensus -if IndicesFileName -ct Majority/Strict -cfm Newick/Nexus
            
        Compute Distance matrix:
            ./CLVTreeScaper -trees -f Trees.txt -ft Trees -w 1/0 -r 1/0 -o Dist -dm URF/RF/Mat
            
        Compute Affinity matrix:
            ./CLVTreeScaper -trees -f Trees.txt -ft Trees -w 1/0 -r 1/0 -o Affinity -dm URF/RF/Mat -am Exp/Rec
            
        Compute Covariance matrix:
            ./CLVTreeScaper -trees -f Trees.txt -ft Trees -w 1/0 -r 1/0 -o Covariance
        
        Compute Communities with lambda positive fixed:
            ./CLVTreeScaper -trees -f Trees.txt -ft Trees -w 1/0 -r 1/0 -o Community -t Affinity/Covariance -cm CNM/CPM/ERNM/NNM -lm manu -lp NumberBetween0and1 -lns NumberBetween0and1 -lne NumberBetween0and1 -lniv NumberBetween0and1 -hf NumberBetween0and1 -lf NumberBetween0and1

        Compute Communities with lambda negative fixed:
            ./CLVTreeScaper -trees -f Trees.txt -ft Trees -w 1/0 -r 1/0 -o Community -t Affinity/Covariance -cm CNM/CPM/ERNM/NNM -lm manu -ln NumberBetween0and1 -lps NumberBetween0and1 -lpe NumberBetween0and1 -lpiv NumberBetween0and1 -hf NumberBetween0and1 -lf NumberBetween0and1
            
        Compute Communities with automatically chosen lambdas:
            ./CLVTreeScaper -trees -f Trees.txt -ft Trees -w 1/0 -r 1/0 -o Community -t Affinity/Covariance -dm SPR -cm CNM/CPM/ERNM/NNM -lm auto -hf NumberBetween0and1 -lf NumberBetween0and1
            
        Load distance and compute affinity matrix
            ./CLVTreeScaper -trees -f dist.txt -ft Dist -o Affinity -am Exp/Rec
            
        Load distance and compute communities of its affinity matrix using automatically search on lambda
            ./CLVTreeScaper -trees -f dist.txt -ft Dist -o Community -t Affinity -am Exp/Rec -cm CNM/CPM/ERNM/NNM -lm auto -hf NumberBetween0and1 -lf NumberBetween0and1
            
        Load covariance and compute communities using automatically search on lambda
            ./CLVTreeScaper -trees -f cova.txt -ft Cova -o Community -cm CNM/CPM/ERNM/NNM -lm auto -hf NumberBetween0and1 -lf NumberBetween0and1

2, -nldr
        Options:
            -f: data file name.
            -t: 'DIS' represents datum is a upper triangle matrix.
                'COR' represents data are Euclidean coordinators.
            -d: the dimension of Euclidean representations.
            -c: cost function. For example, CLASSIC_MDS, KRUSKAL1, NORMALIZED, SAMMON, CCA.
            -a: algorithm. For example, LINEAR_ITERATION, MAJORIZATION, GAUSS_SEIDEL, STOCHASTIC.
            -i: initialize coordinators. 
                'RAND'          represent that generate data randomly.
                'CLASSIC_MDS'   represent that compute low dimension representation by MDS, then
                                the low dimension representation is used as initial coordinators.
            -o: suffix of output file names.
            -s: random seed, if initial coordinators are generated randomly.
        
        Example command:
            ./CLVTreeScaper -nldr -f test.out -t DIS -d 2 -c CCA -a STOCHASTIC -i RAND -o 0 -s 1

3, -dimest
        -dimest: this is to indicate that run dimension estimator instead of NLDR.
        Options:
            -f: data file name
            -e: 'CORR_DIM' represents correlation dimension estimator
                'NN_DIM' represents nearest neighbor estimator
                'MLE_DIM' represents Maximum likelihood estimator
            -i: 'DIS' represents datum is a upper triangle matrix.
                'COR' represents data are Euclidean coordinators.
                    
        Example command:
            ./CLVTreeScaper -dimest -f test.out -e CORR_DIM -i DIS


